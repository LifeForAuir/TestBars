#!/usr/bin/env nodejs
var cluster = require('cluster');

if (cluster.isMaster) {
    //var cpuCount = require('os').cpus().length;
    var cpuCount=2;
    // Create a worker for each CPU
    for (var i = 0; i < cpuCount; i += 1) {
        cluster.fork();
    }
}
else
{

var debug = require('debug')('restapi');
var http = require('http');
var libs = process.cwd() + '/libs/';
var config = require(libs + 'config');
var log = require(libs + 'log')(module);
var app = require(libs + 'app');
var db = require(libs + '/db/pg');


app.set('port', 3000);

app.server = http.createServer(app);
app.server.on('checkContinue', function (req, res) {
    req.checkContinue = true;
    app(req, res);
    /*if(request.headers['x-access-token']){
        db.fn_obj('fn_users_getbytoken', request.headers['x-access-token'])
            .then(function (data) {
                req.session = data;
                response.writeContinue();
            })
            .catch(function (error) {
                log.error('Internal error: %s', error.toString());
                
                if(error.code.startsWith('HL'))
                {
                    response.writeHead(400, { 'Content-Type': 'application/json' });
                    response.end(JSON.stringify({ status: error.code, msg: error.toString() }));
                }else{
                    response.writeHead(500, { 'Content-Type': 'application/json' });
                    response.end(JSON.stringify({ status: 'ERR', msg: 'Server error' }));
                }
            });
    }else{
        response.writeContinue();
    }*/
    //console.log('checkContinue');
    //console.log(request);
    
});

app.server.listen(app.get('port'));
/*
var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + app.get('port'));
  log.info('Express server listening on port ' + app.get('port'));
});*/
}